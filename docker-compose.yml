version: '3.8'

services:
  # Flask web application
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_DEBUG=0
      - SECRET_KEY=${SECRET_KEY:-please-change-this-in-production}
      - DATABASE_URI=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-inbox-genie-pass}@db:5432/${POSTGRES_DB:-inboxgenie}
      # Pass PostgreSQL credentials to web container for entrypoint script
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-inbox-genie-pass}
      - POSTGRES_DB=${POSTGRES_DB:-inboxgenie}
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      - db

  # PostgreSQL database
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-inbox-genie-pass}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-inboxgenie}
    ports:
      - "5433:5432"  # Changed from 5432:5432 to avoid port conflict
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
